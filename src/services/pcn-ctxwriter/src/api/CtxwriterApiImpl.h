/**
* ctxwriter API generated from ctxwriter.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* CtxwriterApiImpl.h
*
*
*/

#pragma once


#include <memory>
#include <map>
#include <mutex>
#include "../Ctxwriter.h"

#include "CtxwriterJsonObject.h"
#include "PortsJsonObject.h"
#include <vector>

namespace polycube {
namespace service {
namespace api {

using namespace polycube::service::model;

namespace CtxwriterApiImpl {
  void create_ctxwriter_by_id(const std::string &name, const CtxwriterJsonObject &value);
  void create_ctxwriter_ports_by_id(const std::string &name, const std::string &portsName, const PortsJsonObject &value);
  void create_ctxwriter_ports_list_by_id(const std::string &name, const std::vector<PortsJsonObject> &value);
  void delete_ctxwriter_by_id(const std::string &name);
  void delete_ctxwriter_ports_by_id(const std::string &name, const std::string &portsName);
  void delete_ctxwriter_ports_list_by_id(const std::string &name);
  CtxwriterActionEnum read_ctxwriter_action_by_id(const std::string &name);
  CtxwriterJsonObject read_ctxwriter_by_id(const std::string &name);
  std::vector<CtxwriterJsonObject> read_ctxwriter_list_by_id();
  PortsJsonObject read_ctxwriter_ports_by_id(const std::string &name, const std::string &portsName);
  std::vector<PortsJsonObject> read_ctxwriter_ports_list_by_id(const std::string &name);
  void replace_ctxwriter_by_id(const std::string &name, const CtxwriterJsonObject &value);
  void replace_ctxwriter_ports_by_id(const std::string &name, const std::string &portsName, const PortsJsonObject &value);
  void replace_ctxwriter_ports_list_by_id(const std::string &name, const std::vector<PortsJsonObject> &value);
  void update_ctxwriter_action_by_id(const std::string &name, const CtxwriterActionEnum &value);
  void update_ctxwriter_by_id(const std::string &name, const CtxwriterJsonObject &value);
  void update_ctxwriter_list_by_id(const std::vector<CtxwriterJsonObject> &value);
  void update_ctxwriter_ports_by_id(const std::string &name, const std::string &portsName, const PortsJsonObject &value);
  void update_ctxwriter_ports_list_by_id(const std::string &name, const std::vector<PortsJsonObject> &value);

  /* help related */
  std::vector<nlohmann::fifo_map<std::string, std::string>> read_ctxwriter_list_by_id_get_list();
  std::vector<nlohmann::fifo_map<std::string, std::string>> read_ctxwriter_ports_list_by_id_get_list(const std::string &name);

}
}
}
}

